backend

npm init --y

npm install express mongoose cors dotenv

npm i nodemon -D


express framework

mongoose ayuda a crear schemas

cors ayuda a comunicar dos servidores entre si y necesitamos para enviar recibir datos

dotenv variables de entornos guar variable dentro del sistema operativos - determinadas string o cadena que no se usan en el codigo

nodemon se encarga de actualizar el servidor cada vez que exista un cambio en el codigo y se reinicia solo cada vez que se cree codigo







FRONTEND

- COMANDOS 
  cmd  npx create-react-app frontend
  realizamos la estructura del fronend
- ahora instalamos un plugins en visual studio y se llama ES7 React/Redux/GraphQL/React-Native snippets

- npm install react-router-dom
  Definimos las rutas en el archivo app

- Ahora instalaremos o usaremos boostrap para realizar nuestra api front
npm install bootstrap@next
y lo importamos en el archivo app

-esta siguiente libreria nos ayudara obtener los datos desde el servidor para el fron end
npm install axios

-luego apretamos F1 y agregamos la siguiente linea de codigo en ese array en el archivo settings.json
   "emmet.includeLanguages": {
        "javascript":"javascriptreact"
    }

-comando especial rcc par crear componentes reac dom

-intalar font awesome completo 
npm i --save @fortawesome/fontawesome-svg-core  @fortawesome/free-solid-svg-icons @fortawesome/react-fontawesome @fortawesome/free-brands-svg-icons

intalar calendario
-npm install react-datepicker

-instalamos otra biblioteca del momento o la actividad realizada o ingresados los datos
npm install timeago.js
